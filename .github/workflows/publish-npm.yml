name: Publish to npm on Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to commit package.json version update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }} # Checkout the branch/commit the release targets
          fetch-depth: 0 # Important to get tags for version extraction if needed elsewhere, good practice

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your package.json engines field
          registry-url: 'https://registry.npmjs.org/'

      - name: Update package.json version and commit
        env: # Using env for git user details
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
          # GITHUB_TOKEN is implicitly used by git push if the checkout action sets up the remote correctly.
        run: |
          VERSION_TAG=${{ github.event.release.tag_name }}
          VERSION=${VERSION_TAG#v}
          TARGET_BRANCH=${{ github.event.release.target_commitish }}

          echo "Current branch/ref: $(git rev-parse --abbrev-ref HEAD)"
          echo "Target branch for release: $TARGET_BRANCH"
          echo "Updating package.json to version $VERSION from tag $VERSION_TAG"
          
          node -e "let pkg = require('./package.json'); pkg.version = '$VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');"
          
          echo "package.json updated. Staging changes."
          git add package.json
          
          echo "Committing updated package.json."
          git commit -m "chore: Bump version to $VERSION_TAG [skip ci]"
          
          echo "Pushing version update to branch $TARGET_BRANCH."
          # Push the current HEAD (which should be on TARGET_BRANCH) to the remote TARGET_BRANCH
          git push origin HEAD:$TARGET_BRANCH

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
