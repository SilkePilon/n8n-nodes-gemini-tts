name: Publish to npm on Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to commit package.json version update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }} # Checkout the branch/commit the release targets
          fetch-depth: 0 # Important to get tags for version extraction if needed elsewhere, good practice

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your package.json engines field
          registry-url: 'https://registry.npmjs.org/'

      - name: Update package.json version and commit
        env: # Using env for git user details
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
          # GITHUB_TOKEN is implicitly used by git push if the checkout action sets up the remote correctly.
          # If explicit token is needed for push:
          # GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # And use in push URL if needed.
        run: |
          VERSION_TAG=${{ github.event.release.tag_name }}
          # Remove 'v' prefix if it exists to get the pure version number
          VERSION=${VERSION_TAG#v}
          
          echo "Release tag: $VERSION_TAG, Extracted version: $VERSION"
          echo "Target commitish (branch/commit to update): ${{ github.event.release.target_commitish }}"
          
          # Configure git (user details are now primarily from env vars)
          # git config --global user.name "$GIT_AUTHOR_NAME" # Handled by env
          # git config --global user.email "$GIT_AUTHOR_EMAIL" # Handled by env
          
          # Update package.json using Node.js
          if [ ! -f package.json ]; then
            echo "package.json not found in root. Current directory: $(pwd)"
            ls -la
            exit 1
          fi
          node -e "let pkg = require('./package.json'); pkg.version = '$VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');"
          echo "package.json updated to version $VERSION"
          
          git add package.json
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to package.json to commit."
          else
            git commit -m "chore: Bump version to $VERSION_TAG [skip ci]"
            echo "Changes committed."
            echo "Pushing version update to branch/commit ${{ github.event.release.target_commitish }}"
            # The `actions/checkout` with `ref: target_commitish` should mean we are on the correct branch/commit.
            # Pushing to 'origin HEAD:target_commitish' pushes the current commit (HEAD) to the remote branch specified by target_commitish.
            # This assumes target_commitish is a branch name. If it's a SHA, this push might create a new ref or fail.
            # However, for releases, target_commitish is typically the branch the tag was made from.
            git push origin HEAD:${{ github.event.release.target_commitish }}
            echo "Push successful."
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
