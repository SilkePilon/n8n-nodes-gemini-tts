name: Publish to npm on Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to commit package.json version update
      # packages: write # Only needed if publishing to GitHub Packages as well
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags so that git push works correctly
          fetch-depth: 0
          # It's good practice to checkout the specific ref that triggered the workflow
          # for a release, this is the tag associated with the release.
          # However, we need to commit to the branch (target_commitish),
          # so we might need to checkout that branch explicitly later if target_commitish is not the current HEAD.
          # For now, this checkout is fine, the git commands below will manage the branch.

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your package.json engines field
          registry-url: 'https://registry.npmjs.org/'

      - name: Update package.json version and commit
        env:
          # GITHUB_TOKEN is automatically available and needed if you were to push to a protected branch
          # and had branch protection rules that require pull requests.
          # For direct push, the permissions.contents: write is key.
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION_TAG=${{ github.event.release.tag_name }}
          # Remove 'v' prefix if it exists to get the pure version number
          VERSION=${VERSION_TAG#v}
          
          echo "Release tag: $VERSION_TAG, Extracted version: $VERSION"
          
          # Update package.json using Node.js
          # Ensure package.json is in the root before running this
          if [ ! -f package.json ]; then
            echo "package.json not found in root. Current directory: $(pwd)"
            ls -la
            exit 1
          fi
          node -e "let pkg = require('./package.json'); pkg.version = '$VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');"
          echo "package.json updated to version $VERSION"
          
          # Configure git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Determine the branch to push to. github.event.release.target_commitish is the target (branch or SHA).
          TARGET_BRANCH=${{ github.event.release.target_commitish }}
          echo "Target commitish (branch or SHA): $TARGET_BRANCH"

          # Checkout the target branch to commit to.
          # This is important if the initial checkout was to the tag (detached HEAD).
          # If TARGET_BRANCH is a SHA, this will be a detached HEAD, but we push to it anyway.
          # If it's a branch name, it checks out the branch.
          git checkout $TARGET_BRANCH
          
          git add package.json
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to package.json to commit."
          else
            git commit -m "chore: Bump version to $VERSION_TAG for release [skip ci]"
            echo "Changes committed. Pushing to $TARGET_BRANCH..."
            # The push URL should include the token for authentication if needed, but actions/checkout usually sets this up.
            # Using GITHUB_TOKEN for authentication with the repo.
            git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:$TARGET_BRANCH
            echo "Push successful."
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
